// Code generated by ent, DO NOT EDIT.

package personalinfo

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/ntiGideon/cvCraft/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldID, id))
}

// FirstName applies equality check predicate on the "first_name" field. It's identical to FirstNameEQ.
func FirstName(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldFirstName, v))
}

// LastName applies equality check predicate on the "last_name" field. It's identical to LastNameEQ.
func LastName(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldLastName, v))
}

// Profession applies equality check predicate on the "profession" field. It's identical to ProfessionEQ.
func Profession(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldProfession, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldEmail, v))
}

// Phone applies equality check predicate on the "phone" field. It's identical to PhoneEQ.
func Phone(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldPhone, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldAddress, v))
}

// Website applies equality check predicate on the "website" field. It's identical to WebsiteEQ.
func Website(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldWebsite, v))
}

// Linkedin applies equality check predicate on the "linkedin" field. It's identical to LinkedinEQ.
func Linkedin(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldLinkedin, v))
}

// Github applies equality check predicate on the "github" field. It's identical to GithubEQ.
func Github(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldGithub, v))
}

// Twitter applies equality check predicate on the "twitter" field. It's identical to TwitterEQ.
func Twitter(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldTwitter, v))
}

// Bio applies equality check predicate on the "bio" field. It's identical to BioEQ.
func Bio(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldBio, v))
}

// PhotoURL applies equality check predicate on the "photo_url" field. It's identical to PhotoURLEQ.
func PhotoURL(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldPhotoURL, v))
}

// FirstNameEQ applies the EQ predicate on the "first_name" field.
func FirstNameEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldFirstName, v))
}

// FirstNameNEQ applies the NEQ predicate on the "first_name" field.
func FirstNameNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldFirstName, v))
}

// FirstNameIn applies the In predicate on the "first_name" field.
func FirstNameIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldFirstName, vs...))
}

// FirstNameNotIn applies the NotIn predicate on the "first_name" field.
func FirstNameNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldFirstName, vs...))
}

// FirstNameGT applies the GT predicate on the "first_name" field.
func FirstNameGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldFirstName, v))
}

// FirstNameGTE applies the GTE predicate on the "first_name" field.
func FirstNameGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldFirstName, v))
}

// FirstNameLT applies the LT predicate on the "first_name" field.
func FirstNameLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldFirstName, v))
}

// FirstNameLTE applies the LTE predicate on the "first_name" field.
func FirstNameLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldFirstName, v))
}

// FirstNameContains applies the Contains predicate on the "first_name" field.
func FirstNameContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldFirstName, v))
}

// FirstNameHasPrefix applies the HasPrefix predicate on the "first_name" field.
func FirstNameHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldFirstName, v))
}

// FirstNameHasSuffix applies the HasSuffix predicate on the "first_name" field.
func FirstNameHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldFirstName, v))
}

// FirstNameEqualFold applies the EqualFold predicate on the "first_name" field.
func FirstNameEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldFirstName, v))
}

// FirstNameContainsFold applies the ContainsFold predicate on the "first_name" field.
func FirstNameContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldFirstName, v))
}

// LastNameEQ applies the EQ predicate on the "last_name" field.
func LastNameEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldLastName, v))
}

// LastNameNEQ applies the NEQ predicate on the "last_name" field.
func LastNameNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldLastName, v))
}

// LastNameIn applies the In predicate on the "last_name" field.
func LastNameIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldLastName, vs...))
}

// LastNameNotIn applies the NotIn predicate on the "last_name" field.
func LastNameNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldLastName, vs...))
}

// LastNameGT applies the GT predicate on the "last_name" field.
func LastNameGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldLastName, v))
}

// LastNameGTE applies the GTE predicate on the "last_name" field.
func LastNameGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldLastName, v))
}

// LastNameLT applies the LT predicate on the "last_name" field.
func LastNameLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldLastName, v))
}

// LastNameLTE applies the LTE predicate on the "last_name" field.
func LastNameLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldLastName, v))
}

// LastNameContains applies the Contains predicate on the "last_name" field.
func LastNameContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldLastName, v))
}

// LastNameHasPrefix applies the HasPrefix predicate on the "last_name" field.
func LastNameHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldLastName, v))
}

// LastNameHasSuffix applies the HasSuffix predicate on the "last_name" field.
func LastNameHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldLastName, v))
}

// LastNameEqualFold applies the EqualFold predicate on the "last_name" field.
func LastNameEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldLastName, v))
}

// LastNameContainsFold applies the ContainsFold predicate on the "last_name" field.
func LastNameContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldLastName, v))
}

// ProfessionEQ applies the EQ predicate on the "profession" field.
func ProfessionEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldProfession, v))
}

// ProfessionNEQ applies the NEQ predicate on the "profession" field.
func ProfessionNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldProfession, v))
}

// ProfessionIn applies the In predicate on the "profession" field.
func ProfessionIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldProfession, vs...))
}

// ProfessionNotIn applies the NotIn predicate on the "profession" field.
func ProfessionNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldProfession, vs...))
}

// ProfessionGT applies the GT predicate on the "profession" field.
func ProfessionGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldProfession, v))
}

// ProfessionGTE applies the GTE predicate on the "profession" field.
func ProfessionGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldProfession, v))
}

// ProfessionLT applies the LT predicate on the "profession" field.
func ProfessionLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldProfession, v))
}

// ProfessionLTE applies the LTE predicate on the "profession" field.
func ProfessionLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldProfession, v))
}

// ProfessionContains applies the Contains predicate on the "profession" field.
func ProfessionContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldProfession, v))
}

// ProfessionHasPrefix applies the HasPrefix predicate on the "profession" field.
func ProfessionHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldProfession, v))
}

// ProfessionHasSuffix applies the HasSuffix predicate on the "profession" field.
func ProfessionHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldProfession, v))
}

// ProfessionEqualFold applies the EqualFold predicate on the "profession" field.
func ProfessionEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldProfession, v))
}

// ProfessionContainsFold applies the ContainsFold predicate on the "profession" field.
func ProfessionContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldProfession, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldEmail, v))
}

// PhoneEQ applies the EQ predicate on the "phone" field.
func PhoneEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldPhone, v))
}

// PhoneNEQ applies the NEQ predicate on the "phone" field.
func PhoneNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldPhone, v))
}

// PhoneIn applies the In predicate on the "phone" field.
func PhoneIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldPhone, vs...))
}

// PhoneNotIn applies the NotIn predicate on the "phone" field.
func PhoneNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldPhone, vs...))
}

// PhoneGT applies the GT predicate on the "phone" field.
func PhoneGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldPhone, v))
}

// PhoneGTE applies the GTE predicate on the "phone" field.
func PhoneGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldPhone, v))
}

// PhoneLT applies the LT predicate on the "phone" field.
func PhoneLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldPhone, v))
}

// PhoneLTE applies the LTE predicate on the "phone" field.
func PhoneLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldPhone, v))
}

// PhoneContains applies the Contains predicate on the "phone" field.
func PhoneContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldPhone, v))
}

// PhoneHasPrefix applies the HasPrefix predicate on the "phone" field.
func PhoneHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldPhone, v))
}

// PhoneHasSuffix applies the HasSuffix predicate on the "phone" field.
func PhoneHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldPhone, v))
}

// PhoneIsNil applies the IsNil predicate on the "phone" field.
func PhoneIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldPhone))
}

// PhoneNotNil applies the NotNil predicate on the "phone" field.
func PhoneNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldPhone))
}

// PhoneEqualFold applies the EqualFold predicate on the "phone" field.
func PhoneEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldPhone, v))
}

// PhoneContainsFold applies the ContainsFold predicate on the "phone" field.
func PhoneContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldPhone, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldAddress, v))
}

// WebsiteEQ applies the EQ predicate on the "website" field.
func WebsiteEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldWebsite, v))
}

// WebsiteNEQ applies the NEQ predicate on the "website" field.
func WebsiteNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldWebsite, v))
}

// WebsiteIn applies the In predicate on the "website" field.
func WebsiteIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldWebsite, vs...))
}

// WebsiteNotIn applies the NotIn predicate on the "website" field.
func WebsiteNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldWebsite, vs...))
}

// WebsiteGT applies the GT predicate on the "website" field.
func WebsiteGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldWebsite, v))
}

// WebsiteGTE applies the GTE predicate on the "website" field.
func WebsiteGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldWebsite, v))
}

// WebsiteLT applies the LT predicate on the "website" field.
func WebsiteLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldWebsite, v))
}

// WebsiteLTE applies the LTE predicate on the "website" field.
func WebsiteLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldWebsite, v))
}

// WebsiteContains applies the Contains predicate on the "website" field.
func WebsiteContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldWebsite, v))
}

// WebsiteHasPrefix applies the HasPrefix predicate on the "website" field.
func WebsiteHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldWebsite, v))
}

// WebsiteHasSuffix applies the HasSuffix predicate on the "website" field.
func WebsiteHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldWebsite, v))
}

// WebsiteIsNil applies the IsNil predicate on the "website" field.
func WebsiteIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldWebsite))
}

// WebsiteNotNil applies the NotNil predicate on the "website" field.
func WebsiteNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldWebsite))
}

// WebsiteEqualFold applies the EqualFold predicate on the "website" field.
func WebsiteEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldWebsite, v))
}

// WebsiteContainsFold applies the ContainsFold predicate on the "website" field.
func WebsiteContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldWebsite, v))
}

// LinkedinEQ applies the EQ predicate on the "linkedin" field.
func LinkedinEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldLinkedin, v))
}

// LinkedinNEQ applies the NEQ predicate on the "linkedin" field.
func LinkedinNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldLinkedin, v))
}

// LinkedinIn applies the In predicate on the "linkedin" field.
func LinkedinIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldLinkedin, vs...))
}

// LinkedinNotIn applies the NotIn predicate on the "linkedin" field.
func LinkedinNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldLinkedin, vs...))
}

// LinkedinGT applies the GT predicate on the "linkedin" field.
func LinkedinGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldLinkedin, v))
}

// LinkedinGTE applies the GTE predicate on the "linkedin" field.
func LinkedinGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldLinkedin, v))
}

// LinkedinLT applies the LT predicate on the "linkedin" field.
func LinkedinLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldLinkedin, v))
}

// LinkedinLTE applies the LTE predicate on the "linkedin" field.
func LinkedinLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldLinkedin, v))
}

// LinkedinContains applies the Contains predicate on the "linkedin" field.
func LinkedinContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldLinkedin, v))
}

// LinkedinHasPrefix applies the HasPrefix predicate on the "linkedin" field.
func LinkedinHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldLinkedin, v))
}

// LinkedinHasSuffix applies the HasSuffix predicate on the "linkedin" field.
func LinkedinHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldLinkedin, v))
}

// LinkedinIsNil applies the IsNil predicate on the "linkedin" field.
func LinkedinIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldLinkedin))
}

// LinkedinNotNil applies the NotNil predicate on the "linkedin" field.
func LinkedinNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldLinkedin))
}

// LinkedinEqualFold applies the EqualFold predicate on the "linkedin" field.
func LinkedinEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldLinkedin, v))
}

// LinkedinContainsFold applies the ContainsFold predicate on the "linkedin" field.
func LinkedinContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldLinkedin, v))
}

// GithubEQ applies the EQ predicate on the "github" field.
func GithubEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldGithub, v))
}

// GithubNEQ applies the NEQ predicate on the "github" field.
func GithubNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldGithub, v))
}

// GithubIn applies the In predicate on the "github" field.
func GithubIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldGithub, vs...))
}

// GithubNotIn applies the NotIn predicate on the "github" field.
func GithubNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldGithub, vs...))
}

// GithubGT applies the GT predicate on the "github" field.
func GithubGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldGithub, v))
}

// GithubGTE applies the GTE predicate on the "github" field.
func GithubGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldGithub, v))
}

// GithubLT applies the LT predicate on the "github" field.
func GithubLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldGithub, v))
}

// GithubLTE applies the LTE predicate on the "github" field.
func GithubLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldGithub, v))
}

// GithubContains applies the Contains predicate on the "github" field.
func GithubContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldGithub, v))
}

// GithubHasPrefix applies the HasPrefix predicate on the "github" field.
func GithubHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldGithub, v))
}

// GithubHasSuffix applies the HasSuffix predicate on the "github" field.
func GithubHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldGithub, v))
}

// GithubIsNil applies the IsNil predicate on the "github" field.
func GithubIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldGithub))
}

// GithubNotNil applies the NotNil predicate on the "github" field.
func GithubNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldGithub))
}

// GithubEqualFold applies the EqualFold predicate on the "github" field.
func GithubEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldGithub, v))
}

// GithubContainsFold applies the ContainsFold predicate on the "github" field.
func GithubContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldGithub, v))
}

// TwitterEQ applies the EQ predicate on the "twitter" field.
func TwitterEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldTwitter, v))
}

// TwitterNEQ applies the NEQ predicate on the "twitter" field.
func TwitterNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldTwitter, v))
}

// TwitterIn applies the In predicate on the "twitter" field.
func TwitterIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldTwitter, vs...))
}

// TwitterNotIn applies the NotIn predicate on the "twitter" field.
func TwitterNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldTwitter, vs...))
}

// TwitterGT applies the GT predicate on the "twitter" field.
func TwitterGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldTwitter, v))
}

// TwitterGTE applies the GTE predicate on the "twitter" field.
func TwitterGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldTwitter, v))
}

// TwitterLT applies the LT predicate on the "twitter" field.
func TwitterLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldTwitter, v))
}

// TwitterLTE applies the LTE predicate on the "twitter" field.
func TwitterLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldTwitter, v))
}

// TwitterContains applies the Contains predicate on the "twitter" field.
func TwitterContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldTwitter, v))
}

// TwitterHasPrefix applies the HasPrefix predicate on the "twitter" field.
func TwitterHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldTwitter, v))
}

// TwitterHasSuffix applies the HasSuffix predicate on the "twitter" field.
func TwitterHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldTwitter, v))
}

// TwitterIsNil applies the IsNil predicate on the "twitter" field.
func TwitterIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldTwitter))
}

// TwitterNotNil applies the NotNil predicate on the "twitter" field.
func TwitterNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldTwitter))
}

// TwitterEqualFold applies the EqualFold predicate on the "twitter" field.
func TwitterEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldTwitter, v))
}

// TwitterContainsFold applies the ContainsFold predicate on the "twitter" field.
func TwitterContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldTwitter, v))
}

// BioEQ applies the EQ predicate on the "bio" field.
func BioEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldBio, v))
}

// BioNEQ applies the NEQ predicate on the "bio" field.
func BioNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldBio, v))
}

// BioIn applies the In predicate on the "bio" field.
func BioIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldBio, vs...))
}

// BioNotIn applies the NotIn predicate on the "bio" field.
func BioNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldBio, vs...))
}

// BioGT applies the GT predicate on the "bio" field.
func BioGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldBio, v))
}

// BioGTE applies the GTE predicate on the "bio" field.
func BioGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldBio, v))
}

// BioLT applies the LT predicate on the "bio" field.
func BioLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldBio, v))
}

// BioLTE applies the LTE predicate on the "bio" field.
func BioLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldBio, v))
}

// BioContains applies the Contains predicate on the "bio" field.
func BioContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldBio, v))
}

// BioHasPrefix applies the HasPrefix predicate on the "bio" field.
func BioHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldBio, v))
}

// BioHasSuffix applies the HasSuffix predicate on the "bio" field.
func BioHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldBio, v))
}

// BioIsNil applies the IsNil predicate on the "bio" field.
func BioIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldBio))
}

// BioNotNil applies the NotNil predicate on the "bio" field.
func BioNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldBio))
}

// BioEqualFold applies the EqualFold predicate on the "bio" field.
func BioEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldBio, v))
}

// BioContainsFold applies the ContainsFold predicate on the "bio" field.
func BioContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldBio, v))
}

// PhotoURLEQ applies the EQ predicate on the "photo_url" field.
func PhotoURLEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEQ(FieldPhotoURL, v))
}

// PhotoURLNEQ applies the NEQ predicate on the "photo_url" field.
func PhotoURLNEQ(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNEQ(FieldPhotoURL, v))
}

// PhotoURLIn applies the In predicate on the "photo_url" field.
func PhotoURLIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIn(FieldPhotoURL, vs...))
}

// PhotoURLNotIn applies the NotIn predicate on the "photo_url" field.
func PhotoURLNotIn(vs ...string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotIn(FieldPhotoURL, vs...))
}

// PhotoURLGT applies the GT predicate on the "photo_url" field.
func PhotoURLGT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGT(FieldPhotoURL, v))
}

// PhotoURLGTE applies the GTE predicate on the "photo_url" field.
func PhotoURLGTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldGTE(FieldPhotoURL, v))
}

// PhotoURLLT applies the LT predicate on the "photo_url" field.
func PhotoURLLT(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLT(FieldPhotoURL, v))
}

// PhotoURLLTE applies the LTE predicate on the "photo_url" field.
func PhotoURLLTE(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldLTE(FieldPhotoURL, v))
}

// PhotoURLContains applies the Contains predicate on the "photo_url" field.
func PhotoURLContains(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContains(FieldPhotoURL, v))
}

// PhotoURLHasPrefix applies the HasPrefix predicate on the "photo_url" field.
func PhotoURLHasPrefix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasPrefix(FieldPhotoURL, v))
}

// PhotoURLHasSuffix applies the HasSuffix predicate on the "photo_url" field.
func PhotoURLHasSuffix(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldHasSuffix(FieldPhotoURL, v))
}

// PhotoURLIsNil applies the IsNil predicate on the "photo_url" field.
func PhotoURLIsNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldIsNull(FieldPhotoURL))
}

// PhotoURLNotNil applies the NotNil predicate on the "photo_url" field.
func PhotoURLNotNil() predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldNotNull(FieldPhotoURL))
}

// PhotoURLEqualFold applies the EqualFold predicate on the "photo_url" field.
func PhotoURLEqualFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldEqualFold(FieldPhotoURL, v))
}

// PhotoURLContainsFold applies the ContainsFold predicate on the "photo_url" field.
func PhotoURLContainsFold(v string) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.FieldContainsFold(FieldPhotoURL, v))
}

// HasResume applies the HasEdge predicate on the "resume" edge.
func HasResume() predicate.PersonalInfo {
	return predicate.PersonalInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, ResumeTable, ResumeColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasResumeWith applies the HasEdge predicate on the "resume" edge with a given conditions (other predicates).
func HasResumeWith(preds ...predicate.Resume) predicate.PersonalInfo {
	return predicate.PersonalInfo(func(s *sql.Selector) {
		step := newResumeStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PersonalInfo) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PersonalInfo) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PersonalInfo) predicate.PersonalInfo {
	return predicate.PersonalInfo(sql.NotPredicates(p))
}
