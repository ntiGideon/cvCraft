// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CertificationsColumns holds the columns for the "certifications" table.
	CertificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "organization", Type: field.TypeString},
		{Name: "issue_date", Type: field.TypeTime},
		{Name: "expiration_date", Type: field.TypeTime, Nullable: true},
		{Name: "credential_id", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
	}
	// CertificationsTable holds the schema information for the "certifications" table.
	CertificationsTable = &schema.Table{
		Name:       "certifications",
		Columns:    CertificationsColumns,
		PrimaryKey: []*schema.Column{CertificationsColumns[0]},
	}
	// EducationsColumns holds the columns for the "educations" table.
	EducationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "institution", Type: field.TypeString},
		{Name: "degree", Type: field.TypeString},
		{Name: "field", Type: field.TypeString},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "grade", Type: field.TypeString, Nullable: true},
	}
	// EducationsTable holds the schema information for the "educations" table.
	EducationsTable = &schema.Table{
		Name:       "educations",
		Columns:    EducationsColumns,
		PrimaryKey: []*schema.Column{EducationsColumns[0]},
	}
	// ExperiencesColumns holds the columns for the "experiences" table.
	ExperiencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "company", Type: field.TypeString},
		{Name: "location", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "skills", Type: field.TypeString, Nullable: true},
		{Name: "current", Type: field.TypeBool, Default: false},
	}
	// ExperiencesTable holds the schema information for the "experiences" table.
	ExperiencesTable = &schema.Table{
		Name:       "experiences",
		Columns:    ExperiencesColumns,
		PrimaryKey: []*schema.Column{ExperiencesColumns[0]},
	}
	// PersonalInfosColumns holds the columns for the "personal_infos" table.
	PersonalInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "profession", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "website", Type: field.TypeString, Nullable: true},
		{Name: "linkedin", Type: field.TypeString, Nullable: true},
		{Name: "github", Type: field.TypeString, Nullable: true},
		{Name: "twitter", Type: field.TypeString, Nullable: true},
		{Name: "bio", Type: field.TypeString, Nullable: true},
		{Name: "photo_url", Type: field.TypeString, Nullable: true},
		{Name: "resume_personal_info", Type: field.TypeInt, Unique: true},
	}
	// PersonalInfosTable holds the schema information for the "personal_infos" table.
	PersonalInfosTable = &schema.Table{
		Name:       "personal_infos",
		Columns:    PersonalInfosColumns,
		PrimaryKey: []*schema.Column{PersonalInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_infos_resumes_personal_info",
				Columns:    []*schema.Column{PersonalInfosColumns[13]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "skills", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// ResumesColumns holds the columns for the "resumes" table.
	ResumesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "shared", Type: field.TypeBool, Default: false},
		{Name: "share_code", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "published", "archived"}, Default: "draft"},
		{Name: "template_resumes", Type: field.TypeInt, Nullable: true},
		{Name: "user_resumes", Type: field.TypeInt},
	}
	// ResumesTable holds the schema information for the "resumes" table.
	ResumesTable = &schema.Table{
		Name:       "resumes",
		Columns:    ResumesColumns,
		PrimaryKey: []*schema.Column{ResumesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resumes_templates_resumes",
				Columns:    []*schema.Column{ResumesColumns[7]},
				RefColumns: []*schema.Column{TemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "resumes_users_resumes",
				Columns:    []*schema.Column{ResumesColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString, Unique: true, Size: 43},
		{Name: "data", Type: field.TypeBytes},
		{Name: "expiry", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "TIMESTAMP(6)"}},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "session_expiry",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[3]},
			},
		},
	}
	// SkillsColumns holds the columns for the "skills" table.
	SkillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"beginner", "intermediate", "advanced", "expert"}, Default: "intermediate"},
	}
	// SkillsTable holds the schema information for the "skills" table.
	SkillsTable = &schema.Table{
		Name:       "skills",
		Columns:    SkillsColumns,
		PrimaryKey: []*schema.Column{SkillsColumns[0]},
	}
	// TemplatesColumns holds the columns for the "templates" table.
	TemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "sections", Type: field.TypeJSON},
		{Name: "config", Type: field.TypeJSON},
		{Name: "thumbnail_url", Type: field.TypeString, Nullable: true},
		{Name: "preview_url", Type: field.TypeString, Nullable: true},
		{Name: "style", Type: field.TypeString, Default: "classic"},
		{Name: "premium", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_templates", Type: field.TypeInt, Nullable: true},
	}
	// TemplatesTable holds the schema information for the "templates" table.
	TemplatesTable = &schema.Table{
		Name:       "templates",
		Columns:    TemplatesColumns,
		PrimaryKey: []*schema.Column{TemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "templates_users_templates",
				Columns:    []*schema.Column{TemplatesColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"user", "admin"}, Default: "user"},
		{Name: "verified", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// ResumeExperiencesColumns holds the columns for the "resume_experiences" table.
	ResumeExperiencesColumns = []*schema.Column{
		{Name: "resume_id", Type: field.TypeInt},
		{Name: "experience_id", Type: field.TypeInt},
	}
	// ResumeExperiencesTable holds the schema information for the "resume_experiences" table.
	ResumeExperiencesTable = &schema.Table{
		Name:       "resume_experiences",
		Columns:    ResumeExperiencesColumns,
		PrimaryKey: []*schema.Column{ResumeExperiencesColumns[0], ResumeExperiencesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_experiences_resume_id",
				Columns:    []*schema.Column{ResumeExperiencesColumns[0]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "resume_experiences_experience_id",
				Columns:    []*schema.Column{ResumeExperiencesColumns[1]},
				RefColumns: []*schema.Column{ExperiencesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResumeEducationsColumns holds the columns for the "resume_educations" table.
	ResumeEducationsColumns = []*schema.Column{
		{Name: "resume_id", Type: field.TypeInt},
		{Name: "education_id", Type: field.TypeInt},
	}
	// ResumeEducationsTable holds the schema information for the "resume_educations" table.
	ResumeEducationsTable = &schema.Table{
		Name:       "resume_educations",
		Columns:    ResumeEducationsColumns,
		PrimaryKey: []*schema.Column{ResumeEducationsColumns[0], ResumeEducationsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_educations_resume_id",
				Columns:    []*schema.Column{ResumeEducationsColumns[0]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "resume_educations_education_id",
				Columns:    []*schema.Column{ResumeEducationsColumns[1]},
				RefColumns: []*schema.Column{EducationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResumeSkillsColumns holds the columns for the "resume_skills" table.
	ResumeSkillsColumns = []*schema.Column{
		{Name: "resume_id", Type: field.TypeInt},
		{Name: "skill_id", Type: field.TypeInt},
	}
	// ResumeSkillsTable holds the schema information for the "resume_skills" table.
	ResumeSkillsTable = &schema.Table{
		Name:       "resume_skills",
		Columns:    ResumeSkillsColumns,
		PrimaryKey: []*schema.Column{ResumeSkillsColumns[0], ResumeSkillsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_skills_resume_id",
				Columns:    []*schema.Column{ResumeSkillsColumns[0]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "resume_skills_skill_id",
				Columns:    []*schema.Column{ResumeSkillsColumns[1]},
				RefColumns: []*schema.Column{SkillsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResumeProjectsColumns holds the columns for the "resume_projects" table.
	ResumeProjectsColumns = []*schema.Column{
		{Name: "resume_id", Type: field.TypeInt},
		{Name: "project_id", Type: field.TypeInt},
	}
	// ResumeProjectsTable holds the schema information for the "resume_projects" table.
	ResumeProjectsTable = &schema.Table{
		Name:       "resume_projects",
		Columns:    ResumeProjectsColumns,
		PrimaryKey: []*schema.Column{ResumeProjectsColumns[0], ResumeProjectsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_projects_resume_id",
				Columns:    []*schema.Column{ResumeProjectsColumns[0]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "resume_projects_project_id",
				Columns:    []*schema.Column{ResumeProjectsColumns[1]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResumeCertificationsColumns holds the columns for the "resume_certifications" table.
	ResumeCertificationsColumns = []*schema.Column{
		{Name: "resume_id", Type: field.TypeInt},
		{Name: "certification_id", Type: field.TypeInt},
	}
	// ResumeCertificationsTable holds the schema information for the "resume_certifications" table.
	ResumeCertificationsTable = &schema.Table{
		Name:       "resume_certifications",
		Columns:    ResumeCertificationsColumns,
		PrimaryKey: []*schema.Column{ResumeCertificationsColumns[0], ResumeCertificationsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_certifications_resume_id",
				Columns:    []*schema.Column{ResumeCertificationsColumns[0]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "resume_certifications_certification_id",
				Columns:    []*schema.Column{ResumeCertificationsColumns[1]},
				RefColumns: []*schema.Column{CertificationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CertificationsTable,
		EducationsTable,
		ExperiencesTable,
		PersonalInfosTable,
		ProjectsTable,
		ResumesTable,
		SessionsTable,
		SkillsTable,
		TemplatesTable,
		UsersTable,
		ResumeExperiencesTable,
		ResumeEducationsTable,
		ResumeSkillsTable,
		ResumeProjectsTable,
		ResumeCertificationsTable,
	}
)

func init() {
	PersonalInfosTable.ForeignKeys[0].RefTable = ResumesTable
	ResumesTable.ForeignKeys[0].RefTable = TemplatesTable
	ResumesTable.ForeignKeys[1].RefTable = UsersTable
	TemplatesTable.ForeignKeys[0].RefTable = UsersTable
	ResumeExperiencesTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeExperiencesTable.ForeignKeys[1].RefTable = ExperiencesTable
	ResumeEducationsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeEducationsTable.ForeignKeys[1].RefTable = EducationsTable
	ResumeSkillsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeSkillsTable.ForeignKeys[1].RefTable = SkillsTable
	ResumeProjectsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeProjectsTable.ForeignKeys[1].RefTable = ProjectsTable
	ResumeCertificationsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeCertificationsTable.ForeignKeys[1].RefTable = CertificationsTable
}
